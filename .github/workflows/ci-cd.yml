name: CI/CD - Build, Push & Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repo
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Login to Azure Container Registry
      - name: Login to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ secrets.ACR_LOGIN_SERVER }} \
            -u ${{ secrets.ACR_USERNAME }} --password-stdin

      # 3. Build & Push Backend
      - name: Build & Push Backend Image
        run: |
          IMAGE_TAG_BACKEND=${{ secrets.ACR_LOGIN_SERVER }}/backend:${{ github.sha }}
          docker build -t $IMAGE_TAG_BACKEND ./backend
          docker push $IMAGE_TAG_BACKEND
          echo "IMAGE_TAG_BACKEND=$IMAGE_TAG_BACKEND" >> $GITHUB_ENV

      # 4. Build & Push Frontend
      - name: Build & Push Frontend Image
        run: |
          IMAGE_TAG_FRONTEND=${{ secrets.ACR_LOGIN_SERVER }}/frontend:${{ github.sha }}
          docker build -t $IMAGE_TAG_FRONTEND ./frontend
          docker push $IMAGE_TAG_FRONTEND
          echo "IMAGE_TAG_FRONTEND=$IMAGE_TAG_FRONTEND" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # Ensures CD runs only after CI succeeds

    steps:
      # 1. Checkout repo
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Setup kubeconfig
      - name: Setup kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      # 3. Deploy MongoDB (only first time)
      - name: Apply MongoDB
        run: |
          kubectl apply -f k8s/mongo-pvc.yaml
          kubectl apply -f k8s/mongo-deployment.yaml
          kubectl apply -f k8s/mongo-service.yaml

      # 4. Deploy Backend
      - name: Deploy Backend
        run: |
          sed -i "s|<IMAGE_TAG>|${{ env.IMAGE_TAG_BACKEND }}|g" k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml

      # 5. Deploy Frontend
      - name: Deploy Frontend
        run: |
          sed -i "s|<IMAGE_TAG>|${{ env.IMAGE_TAG_FRONTEND }}|g" k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-service.yaml

      # 6. Verify
      - name: Get Pods & Services
        run: |
          kubectl get pods
          kubectl get svc
